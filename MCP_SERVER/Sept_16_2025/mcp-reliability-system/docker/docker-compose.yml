
version: '3.8'

services:
  mcp-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: mcp-reliability-server
    ports:
      - "8080:8080"  # Main server port
      - "9090:9090"  # Prometheus metrics port
    environment:
      - MCP_CONFIG_PATH=/app/config/production.yaml
      - MCP_LOG_LEVEL=INFO
      - MCP_PROMETHEUS_ENABLED=true
    volumes:
      - ../config:/app/config:ro
      - mcp-logs:/app/logs
      - mcp-cache:/app/cache
    networks:
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mcp-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - mcp-network
    restart: unless-stopped
    depends_on:
      - prometheus

  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mcp-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  mcp-logs:
  mcp-cache:
  prometheus-data:
  grafana-data:
  redis-data:

networks:
  mcp-network:
    driver: bridge
